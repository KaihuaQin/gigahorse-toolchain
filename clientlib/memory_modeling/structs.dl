
.decl StatementDominates(stmt1: Statement, stmt2: Statement) inline

StatementDominates(stmt1, stmt2):-
  Statement_Block(stmt1, block1),
  Statement_Block(stmt2, block2),
  (Dominates(block1, block2) ; LocalStatementPathInBlock(stmt1, stmt2)).


.decl PossibleStructAllocation(mload: Statement, mstore: Statement, structBase: Variable, wordWidth: number)
DEBUG_OUTPUT(PossibleStructAllocation)

.decl StructAllocationInternal(mstore: Statement, structBase: Variable, wordWidth: number)
DEBUG_OUTPUT(StructAllocationInternal)

.decl InitialStoreToPossibleStruct(mstore: Statement, structBase: Variable, storedVar: Variable, wordOffset: number)
DEBUG_OUTPUT(InitialStoreToPossibleStruct)

.decl StructIndex(structBase: Variable, wordOffset: number)
DEBUG_OUTPUT(StructIndex)

// REVIEW: Make sure this doesn't cause any imprecision with other patterns or array allocations with constant length
// REVIEW: This is rather conservative right now as I imagine these patterns produced by the compiler are.
// May need to make them more general with regard to aliasing.

PossibleStructAllocation(mload, freePtrUpdStore, structBase, memDiff / 32):-
  MLOADFreePtr_To(mload, structBase),
  FreePointerBasedValue(updateVal, mload, _, memDiff),
  memDiff % 32 = 0,
  Variable_SymbolicValue(updatedFMP, updateVal),
  MSTORE(freePtrUpdStore, _, updatedFMP),
  MSTOREFreePtr(freePtrUpdStore).

InitialStoreToPossibleStruct(mstore, structBaseVar, storedVar, memOffset / 32):-
  PossibleStructAllocation(mload, freePtrUpdStore, structBaseVar, wordWidth),
  FreePointerBasedValue(storeIndexVal, mload, _, memOffset),
  memOffset % 32 = 0,
  memOffset / 32 < wordWidth,
  Variable_SymbolicValue(memIndex, storeIndexVal),
  MSTORE(mstore, memIndex, storedVar),
  StatementDominates(mload, mstore),
  StatementDominates(mstore, freePtrUpdStore).

StructAllocationInternal(freePtrUpdStore, structBaseVar, wordWidth):-
  PossibleStructAllocation(_, freePtrUpdStore, structBaseVar, wordWidth),
  wordWidth >= count : InitialStoreToPossibleStruct(_, structBaseVar, _, _),
  DataFlows(structBaseVar, argOrRet),
  (ActualArgs(_, argOrRet, _) ; ActualReturnArgs(_, argOrRet, _)).


StructIndex(structBaseVar, memOffset / 32):-
  StructAllocationInternal(freePtrUpdStore, structBaseVar, wordWidth),
  PossibleStructAllocation(mload, freePtrUpdStore, structBaseVar, wordWidth),
  Variable_SymbolicValue(structBaseVar, structBaseVal),
  FreePointerBasedValuesNumDiffNoMemReuse(indexValue, structBaseVal, memOffset),
  memOffset % 32 = 0,
  memOffset / 32 < wordWidth,
  Variable_SymbolicValue(indexVar, indexValue),
  Statement_Defines(indexDefStmt, indexVar, _),
  StatementDominates(mload, indexDefStmt).